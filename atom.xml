<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://happyzhihao.github.io</id>
    <title>Gridea</title>
    <updated>2023-04-01T13:10:18.192Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://happyzhihao.github.io"/>
    <link rel="self" href="https://happyzhihao.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://happyzhihao.github.io/images/avatar.png</logo>
    <icon>https://happyzhihao.github.io/favicon.ico</icon>
    <rights>All rights reserved 2023, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[cox model]]></title>
        <id>https://happyzhihao.github.io/post/cox-model/</id>
        <link href="https://happyzhihao.github.io/post/cox-model/">
        </link>
        <updated>2023-04-01T13:02:33.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-R">library(survival)
rm(list = ls())
</code></pre>
<h1 id="模拟设置">模拟设置</h1>
<ul>
<li>研究入组时长50个月，随访时长180个月</li>
<li>事件：基线hazard=0.05；服从weibull分布：Ht=(lambda * t)^alpha (设置alpha=2)</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo>(</mo><mi>t</mi><mo>)</mo><mo>=</mo><mo>(</mo><mi>λ</mi><mi>t</mi><msup><mo>)</mo><mi>α</mi></msup></mrow><annotation encoding="application/x-tex">H(t)=(\lambda t)^\alpha
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">λ</span><span class="mord mathdefault">t</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span></span></span></span></span></span></span></span></span></p>
<ul>
<li>失访：hazard=0.01，服从指数分布</li>
<li>满足比例风险假设</li>
<li>组别变量x：0（对照组）、1（试验组）；cox model中回归系数beta=0.5</li>
</ul>
<p>若满足比例风险假定，累积风险函数Ht存在以下关系：Ht=H0t * exp(beta * x)</p>
<p>模拟步骤：</p>
<ul>
<li>(1) 计算生存函数St，转换为累积死亡率函数Ft，reverse CDF method获得生存时间的模拟样本</li>
<li>(2) 失访指数分布，reverse CDF method获得失访时间的模拟样本</li>
<li>(3) 根据事件时间、失访时间、随访截止时间判断结局status和time的取值</li>
</ul>
<h1 id="模拟数据">模拟数据</h1>
<p>模拟50000个受试者</p>
<pre><code class="language-R">N &lt;- 50000
</code></pre>
<h2 id="每个人的事件时间">每个人的事件时间</h2>
<pre><code class="language-R">set.seed(123)
u_event &lt;- runif(n = N)
x &lt;- sample(c(0, 1), size = N, replace = T, prob = c(0.5, 0.5))

lambda1 &lt;- 0.05
alpha &lt;- 2
beta &lt;- 0.5

t_event &lt;- function(u, lambda, alpha, beta, x) {
  t &lt;- (-log(1 - u) / exp(beta * x))^(1 / alpha) / lambda
  return(t)
}

df &lt;- data.frame(
  T1 = t_event(u_event, lambda1, alpha, beta, x),
  x = x
)
</code></pre>
<h2 id="每个人的失访时间">每个人的失访时间</h2>
<pre><code class="language-R"># St=exp(-lambda * t)
lambda2 &lt;- 0.01

set.seed(234)
u_loss &lt;- runif(n = N)
t_loss &lt;- function(u, lambda) {
  t &lt;- (-log(1 - u)) / lambda
  return(t)
}

df$T2 &lt;- t_loss(u_loss, lambda2)
</code></pre>
<h2 id="每个人的实际随访时长">每个人的实际随访时长</h2>
<pre><code class="language-R"># 随访时间180个月
df$T3 &lt;- 180

# 500个人入组时间服从均匀分布，入组时间50个月
set.seed(345)
t_enroll &lt;- runif(n = N, min = 0, max = 50)

# 每个人的实际随访时长
df$T4 &lt;- 180 + 50 - t_enroll
</code></pre>
<pre><code class="language-R">head(df)
</code></pre>
<table class="dataframe">
<caption>A data.frame: 6 × 5</caption>
<thead>
	<tr><th></th><th scope=col>T1</th><th scope=col>x</th><th scope=col>T2</th><th scope=col>T3</th><th scope=col>T4</th></tr>
	<tr><th></th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>
</thead>
<tbody>
	<tr><th scope=row>1</th><td> 9.070059</td><td>1</td><td>136.892606</td><td>180</td><td>219.1873</td></tr>
	<tr><th scope=row>2</th><td>19.408299</td><td>1</td><td>152.194193</td><td>180</td><td>216.2618</td></tr>
	<tr><th scope=row>3</th><td>11.295567</td><td>1</td><td>  2.024058</td><td>180</td><td>210.5037</td></tr>
	<tr><th scope=row>4</th><td>22.816232</td><td>1</td><td>149.649049</td><td>180</td><td>197.2130</td></tr>
	<tr><th scope=row>5</th><td>33.593031</td><td>0</td><td>  6.925372</td><td>180</td><td>208.2067</td></tr>
	<tr><th scope=row>6</th><td> 4.318649</td><td>0</td><td>103.506054</td><td>180</td><td>189.8258</td></tr>
</tbody>
</table>
<h2 id="判断生存结局time和status取值">判断生存结局time和status取值</h2>
<pre><code class="language-R"># T1：潜在事件时间
# T2：潜在失访时间
# T3：入组时间
# T4：潜在随访时长(或随访终止时间)

df$status &lt;- df$time &lt;- NA

# case1：事件最先发生
df$time[df$T1 &lt;= df$T2 &amp; df$T1 &lt;= df$T4] &lt;-
  df$T1[df$T1 &lt;= df$T2 &amp; df$T1 &lt;= df$T4]
df$status[df$T1 &lt;= df$T2 &amp; df$T1 &lt;= df$T4] &lt;- 1

# case2：失访最先发生
df$time[df$T2 &lt;= df$T1 &amp; df$T2 &lt;= df$T4] &lt;-
  df$T2[df$T2 &lt;= df$T1 &amp; df$T2 &lt;= df$T4]
df$status[df$T2 &lt;= df$T1 &amp; df$T2 &lt;= df$T4] &lt;- 0

# case3: 随访终止最先发生
df$time[df$T4 &lt;= df$T1 &amp; df$T4 &lt;= df$T2] &lt;-
  df$T4[df$T4 &lt;= df$T1 &amp; df$T4 &lt;= df$T2]
df$status[df$T4 &lt;= df$T1 &amp; df$T4 &lt;= df$T2] &lt;- 0

print(apply(df, 2, function(x) sum(is.na(x))))
</code></pre>
<pre><code>    T1      x     T2     T3     T4   time status 
     0      0      0      0      0      0      0 
</code></pre>
<h1 id="拟合cox比例风险模型">拟合Cox比例风险模型</h1>
<p>回归系数0.499626约等于模拟中设定的beta=0.5</p>
<p>试验组相比对照组，风险增加64.8%</p>
<pre><code class="language-R">df$x &lt;- factor(df$x, levels = c(0, 1))
fit_cox &lt;- coxph(Surv(time = time, event = status) ~ x, data = df)
summary(fit_cox)
</code></pre>
<pre><code>Call:
coxph(formula = Surv(time = time, event = status) ~ x, data = df)

  n= 50000, number of events= 42866 

       coef exp(coef) se(coef)     z Pr(&gt;|z|)    
x1 0.499626  1.648104 0.009907 50.43   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

   exp(coef) exp(-coef) lower .95 upper .95
x1     1.648     0.6068     1.616      1.68

Concordance= 0.562  (se = 0.001 )
Likelihood ratio test= 2533  on 1 df,   p=&lt;2e-16
Wald test            = 2543  on 1 df,   p=&lt;2e-16
Score (logrank) test = 2591  on 1 df,   p=&lt;2e-16
</code></pre>
<h1 id="拟合加速时间失效模型aft">拟合加速时间失效模型（AFT）</h1>
<p>AFT model给出组别的效应值：相比于对照组，试验组生存时间减少22.1%</p>
<p>相比于cox model，该模型也给出基线weibull分布的参数</p>
<pre><code class="language-R">round(exp(-0.25003) - 1, 3)
</code></pre>
<p>-0.221</p>
<pre><code class="language-R">fit_aft &lt;- survreg(Surv(time = time, event = status) ~ x, data = df, dist=&quot;weibull&quot;)
summary(fit_aft)
</code></pre>
<pre><code>Call:
survreg(formula = Surv(time = time, event = status) ~ x, data = df, 
    dist = &quot;weibull&quot;)
               Value Std. Error      z      p
(Intercept)  2.99048    0.00349  856.0 &lt;2e-16
x1          -0.25003    0.00483  -51.7 &lt;2e-16
Log(scale)  -0.69264    0.00371 -186.8 &lt;2e-16

Scale= 0.5 

Weibull distribution
Loglik(model)= -150325.6   Loglik(intercept only)= -151612.7
	Chisq= 2574.29 on 1 degrees of freedom, p= 0 
Number of Newton-Raphson Iterations: 7 
n= 50000 
</code></pre>
<p>fit_aft$scale即为模拟中weibull分布的1/alpha</p>
<pre><code class="language-R">fit_aft$scale
</code></pre>
<p>0.500252883887261</p>
<p>exp(coef(fit_aft)[1])即为模拟中weibull分布的1 / lambda1</p>
<pre><code class="language-R">exp(coef(fit_aft)[1])
1 / lambda1
</code></pre>
<p><strong>(Intercept):</strong> 19.8951527049807</p>
<p>20</p>
<h1 id="cox与aft-model回归系数对应">Cox与AFT model回归系数对应</h1>
<p>AFT model的回归系数/scale=-0.499800916384525约等于cox model的回归系数0.499626</p>
<pre><code class="language-R">coef(fit_aft)[2] / fit_aft$scale
</code></pre>
<p><strong>x1:</strong> -0.499800916384525</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Test title]]></title>
        <id>https://happyzhihao.github.io/post/test-title/</id>
        <link href="https://happyzhihao.github.io/post/test-title/">
        </link>
        <updated>2023-03-26T02:07:40.000Z</updated>
        <content type="html"><![CDATA[<p>测试图片<br>
<img src="https://zhihao-pku.oss-cn-beijing.aliyuncs.com/202303261008662.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://happyzhihao.github.io/post/hello-gridea/</id>
        <link href="https://happyzhihao.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="https://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>